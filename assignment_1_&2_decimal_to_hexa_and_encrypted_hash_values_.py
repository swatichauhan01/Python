# -*- coding: utf-8 -*-
"""Assignment-1 &2 -decimal to hexa and encrypted hash values .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tJWvCkXJtcVvy0KYJKL4LtlmvIgXHwZE

1: First Assignment- Decimal to Binary Conversion of random numbers
"""

import numpy as np

def hexa(n):
  for j in range(len(n)):
    hexadecimalNum=""
    while (n[j]!=0):
      temp=n[j]%16
      if temp <10:
        hexadecimalNum=hexadecimalNum+(chr(temp+48))
      else:
        hexadecimalNum=hexadecimalNum+(chr(temp+55))
      n[j]=n[j]//16
    print(hexadecimalNum[::-1])

hexa(np.random.randint(0,2000,1000))

"""2: Encrypted String with the help of hash function

EX: Hello 
=HX11+eX11^2+lX11^3+lX11^4+oX11^5
"""



def enc(str,num):
        b=0
        for j in range(len(str)):
            b=b + (ord(str[j]))*(num**(j+1))
        print(b,"Encypted Hash value of a string")          
enc('sw',11);

str=input("Enter the string")
print(str)
num = int(input("Enter a number: "))
if num > 1:
    for i in range(2,num):
        if (num % i) == 0:
            print(num,"is not a prime number and cannt encrypt")
            break  
        else:
            print(num,"is a prime number")
            b=0
            for j in range(len(str)):
                #for k in range(len(str)):
                    b=b + (ord(str[j]))*(num**(j+1))
        print(b,"Encypted Hash value of a string")          
                                           
else:  
    print(num,"is not a prime number,we cannt encrypt msg")